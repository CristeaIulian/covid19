{"ast":null,"code":"import * as Highcharts from 'highcharts';\nimport { States } from '../../interfaces';\nimport dataByCountry from '../../mocks/by_country.json';\nimport countries from '../../mocks/countries.json';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/covid/covid.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/chips\";\nimport * as i4 from \"@angular/material/paginator\";\nimport * as i5 from \"@angular/material/radio\";\nfunction ReportsComponent_mat_radio_button_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-radio-button\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const status_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", status_r1.value)(\"checked\", status_r1.checked);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", status_r1.value, \" \");\n  }\n}\nexport let ReportsComponent = /*#__PURE__*/(() => {\n  class ReportsComponent {\n    constructor(covidService) {\n      this.covidService = covidService;\n      this.countries = {\n        full: [],\n        partial: []\n      };\n      this.countriesSelected = [];\n      this.data = [];\n      this.pageSize = 10;\n      this.peopleStatuses = [{\n        value: States.confirmed,\n        checked: true\n      }, {\n        value: States.recovered,\n        checked: false\n      }, {\n        value: States.deaths,\n        checked: false\n      }];\n      this.peopleStateSelected = 'confirmed';\n      this.showHighcharts = false;\n    }\n    ngOnInit() {\n      this.getCountries();\n    }\n    generateGraph() {\n      const {\n        categories,\n        series\n      } = this.covidService.getDataForGraph(this.countriesSelected, this.countries, this.data, this.covidService.getCurrentState(this.peopleStatuses));\n      const chart = Highcharts.chart('chart-line', {\n        chart: {\n          type: 'line'\n        },\n        title: {\n          text: `Covid-19 / Countries (${this.covidService.getCurrentState(this.peopleStatuses)})`\n        },\n        credits: {\n          enabled: false\n        },\n        legend: {\n          enabled: true\n        },\n        yAxis: {\n          title: {\n            text: 'cases'\n          }\n        },\n        xAxis: {\n          type: 'category'\n        },\n        categories: {\n          data: categories\n        },\n        tooltip: {\n          headerFormat: `<div>Date: {point.key}</div>`,\n          pointFormat: `<div>{series.name}: {point.y}</div>`,\n          shared: true,\n          useHTML: true\n        },\n        series\n      });\n    }\n    getCountries() {\n      this.countries.full = countries;\n      this.countries.partial = this.countries.full.slice(0, this.pageSize);\n    }\n    chipClick(country) {\n      this.countries.partial.forEach((item, index) => {\n        if (country.index === item.index) {\n          this.countries.partial[index].selected = !item.selected;\n          this.countries.partial[index].color = item.selected ? 'primary' : 'secondary';\n          if (item.selected) {\n            this.countriesSelected.push(item.slug);\n          } else {\n            const ndx = this.countriesSelected.indexOf(item.slug);\n            if (ndx > -1) {\n              this.countriesSelected.splice(ndx, 1);\n            }\n          }\n        }\n      });\n      this.getDataByCountry(country);\n    }\n    getDataByCountry(country) {\n      if (!this.data[country.slug]) {\n        this.data[country.slug] = dataByCountry[country.countryCode];\n        this.generateGraph();\n        this.showHighcharts = true;\n      } else {\n        this.generateGraph();\n      }\n    }\n    changeState(e) {\n      this.peopleStatuses.forEach((status, index) => {\n        this.peopleStatuses[index].checked = e.value === status.value;\n      });\n      this.generateGraph();\n    }\n    handlePage($event) {\n      this.countries.partial = this.countries.full.slice($event.pageIndex * $event.pageSize, ($event.pageIndex + 1) * $event.pageSize);\n    }\n    static #_ = this.ɵfac = function ReportsComponent_Factory(t) {\n      return new (t || ReportsComponent)(i0.ɵɵdirectiveInject(i1.CovidService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ReportsComponent,\n      selectors: [[\"app-reports\"]],\n      decls: 18,\n      vars: 4,\n      consts: [[1, \"reports_container\"], [1, \"countries\"], [\"color\", \"primary\", \"selected\", \"\"], [\"color\", \"accent\", \"selected\", \"\"], [1, \"control-bar\"], [1, \"status\"], [\"aria-labelledby\", \"example-radio-group-label\", 1, \"example-radio-group\", 3, \"change\"], [\"class\", \"example-radio-button\", 3, \"value\", \"checked\", 4, \"ngFor\", \"ngForOf\"], [3, \"page\", \"length\", \"pageSize\"], [3, \"hidden\"], [\"id\", \"chart-line\"], [1, \"example-radio-button\", 3, \"value\", \"checked\"]],\n      template: function ReportsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"mat-chip-list\")(3, \"mat-chip\");\n          i0.ɵɵtext(4, \"One fish\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"mat-chip\");\n          i0.ɵɵtext(6, \"Two fish\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"mat-chip\", 2);\n          i0.ɵɵtext(8, \"Primary fish\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"mat-chip\", 3);\n          i0.ɵɵtext(10, \"Accent fish\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(11, \"div\", 4)(12, \"div\", 5)(13, \"mat-radio-group\", 6);\n          i0.ɵɵlistener(\"change\", function ReportsComponent_Template_mat_radio_group_change_13_listener($event) {\n            return ctx.changeState($event);\n          });\n          i0.ɵɵtemplate(14, ReportsComponent_mat_radio_button_14_Template, 2, 3, \"mat-radio-button\", 7);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(15, \"mat-paginator\", 8);\n          i0.ɵɵlistener(\"page\", function ReportsComponent_Template_mat_paginator_page_15_listener($event) {\n            return ctx.handlePage($event);\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(16, \"div\", 9);\n          i0.ɵɵelement(17, \"div\", 10);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(14);\n          i0.ɵɵproperty(\"ngForOf\", ctx.peopleStatuses);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"length\", ctx.countries.full.length)(\"pageSize\", ctx.pageSize);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"hidden\", !ctx.showHighcharts);\n        }\n      },\n      dependencies: [i2.NgForOf, i3.MatChip, i4.MatPaginator, i5.MatRadioGroup, i5.MatRadioButton],\n      styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%]; (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  {// webpackBootstrap var __webpack_modules__ = ({423: (() => {throw new Error(\\\"Module build failed (from ./node_modules/sass-loader/dist/cjs.js):nCan't find stylesheet to import.n  \\\\2577n2 \\\\2502  @import '@angular/material/theming';n  \\\\2502          ^^^^^^^^^^^^^^^^^^^^^^^^^^^n  \\\\2575n  src\\\\\\\\themes\\\\\\\\glass.scss 2:9                              @importn  src\\\\\\\\variables.scss 2:9                                 @importn  src\\\\\\\\app\\\\\\\\components\\\\\\\\reports\\\\\\\\reports.component.scss 1:9  root stylesheet\\\");})}); // startup // Load entry module and return exports // This entry module doesn\\\"t tell about it\\\"s top-level declarations so it can't be inlined\\nvar __webpack_exports__ = {}; __webpack_modules__[423](); resource = __webpack_exports__;})()[_ngcontent-%COMP%]   ;[_ngcontent-%COMP%]{}\"]\n    });\n  }\n  return ReportsComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}